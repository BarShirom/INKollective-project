{"ast":null,"code":"import { addImage, setImages, deleteImageId } from \"./imagesSlice\";\nimport axios from \"axios\";\nexport const selectCount = state => state.images;\nexport const uploadImage = userImageObj => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/images/addImage\", userImageObj);\n    const {\n      image\n    } = data;\n    console;\n    dispatch(addImage(image));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllImages = () => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(\"/api/images/getAllImages\");\n    //console.log(data)\n    const {\n      imagesDB\n    } = data;\n    dispatch(setImages(imagesDB));\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteImageById = imageId => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/images/deleteImage\", {\n      imageId\n    });\n    dispatch(deleteImageId(imageId));\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["addImage","setImages","deleteImageId","axios","selectCount","state","images","uploadImage","userImageObj","dispatch","getState","data","post","image","console","error","log","getAllImages","get","imagesDB","deleteImageById","imageId"],"sources":["C:/Users/97254/Desktop/fullStuck/client/src/features/images/imagesAction.ts"],"sourcesContent":["import { addImage, setImages,deleteImageId } from \"./imagesSlice\";\r\nimport axios from \"axios\";\r\nimport { userImageObject } from \"./imagesSlice\";\r\nimport { RootState, AppThunk } from '../../app/store';\r\n\r\n\r\n\r\nexport const selectCount = (state: RootState) => state.images;\r\n\r\nexport const uploadImage =\r\n  (userImageObj: userImageObject): AppThunk =>\r\n  async(dispatch, getState) => {\r\n\r\n    try{\r\n    const {data} = await axios.post(\"/api/images/addImage\", userImageObj)\r\n    const {image} = data\r\n    console\r\n    dispatch(addImage(image));\r\n\r\n    }catch(error){\r\n      console.log(error)\r\n\r\n    }\r\n    \r\n  };\r\n\r\n  export const getAllImages =\r\n  (): AppThunk =>\r\n  async(dispatch, getState) => {\r\n\r\n    try{\r\n\r\n    const {data} = await axios.get(\"/api/images/getAllImages\")\r\n    //console.log(data)\r\n    const {imagesDB} = data\r\n    \r\n    dispatch(setImages(imagesDB));\r\n\r\n    return data\r\n    }catch(error){\r\n      console.log(error)\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  export const deleteImageById = (imageId: string | null | undefined): AppThunk =>\r\n  async(dispatch, getState) => {\r\n\r\n    try{\r\n\r\n    const {data} = await axios.post(\"/api/images/deleteImage\",{imageId})\r\n    dispatch(deleteImageId(imageId));\r\n\r\n    return data\r\n    }catch(error){\r\n      console.log(error)\r\n\r\n    }\r\n    \r\n  }\r\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,EAACC,aAAa,QAAQ,eAAe;AACjE,OAAOC,KAAK,MAAM,OAAO;AAMzB,OAAO,MAAMC,WAAW,GAAIC,KAAgB,IAAKA,KAAK,CAACC,MAAM;AAE7D,OAAO,MAAMC,WAAW,GACrBC,YAA6B,IAC9B,OAAMC,QAAQ,EAAEC,QAAQ,KAAK;EAE3B,IAAG;IACH,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,sBAAsB,EAAEJ,YAAY,CAAC;IACrE,MAAM;MAACK;IAAK,CAAC,GAAGF,IAAI;IACpBG,OAAO;IACPL,QAAQ,CAACT,QAAQ,CAACa,KAAK,CAAC,CAAC;EAEzB,CAAC,QAAME,KAAK,EAAC;IACXD,OAAO,CAACE,GAAG,CAACD,KAAK,CAAC;EAEpB;AAEF,CAAC;AAED,OAAO,MAAME,YAAY,GACzBA,CAAA,KACA,OAAMR,QAAQ,EAAEC,QAAQ,KAAK;EAE3B,IAAG;IAEH,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMR,KAAK,CAACe,GAAG,CAAC,0BAA0B,CAAC;IAC1D;IACA,MAAM;MAACC;IAAQ,CAAC,GAAGR,IAAI;IAEvBF,QAAQ,CAACR,SAAS,CAACkB,QAAQ,CAAC,CAAC;IAE7B,OAAOR,IAAI;EACX,CAAC,QAAMI,KAAK,EAAC;IACXD,OAAO,CAACE,GAAG,CAACD,KAAK,CAAC;EAEpB;AAEF,CAAC;AAED,OAAO,MAAMK,eAAe,GAAIC,OAAkC,IAClE,OAAMZ,QAAQ,EAAEC,QAAQ,KAAK;EAE3B,IAAG;IAEH,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,yBAAyB,EAAC;MAACS;IAAO,CAAC,CAAC;IACpEZ,QAAQ,CAACP,aAAa,CAACmB,OAAO,CAAC,CAAC;IAEhC,OAAOV,IAAI;EACX,CAAC,QAAMI,KAAK,EAAC;IACXD,OAAO,CAACE,GAAG,CAACD,KAAK,CAAC;EAEpB;AAEF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}